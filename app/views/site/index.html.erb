<head>
		<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.2/leaflet.css" />
		 <!--[if lte IE 8]>
		     <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.2/leaflet.ie.css" />
		 <![endif]-->
		 <script src="http://cdn.leafletjs.com/leaflet-0.6.2/leaflet.js"></script>

    <!-- <script src="jquery-2.0.3.min.js"></script> -->
</head>
<body>
	 <div id="map">
   
   <%= render partial: "mapSearchHeader" %>



    <script type="text/javascript" src="http://api.evdb.com/js/api">

    </script>


		<script>
			var latitude;
			var longitude;

      	   if(navigator.geolocation)
      	   {
      	      // timeout at 60000 milliseconds (60 seconds)
      	      var options = {timeout:60000};
      	      navigator.geolocation.getCurrentPosition(setMap, errorHandler, options);
      	   }
  	       else
  	       {
      	         alert("Sorry, browser does not support geolocation!");
      	   }

	      	function errorHandler(err) {
	      	  if(err.code == 1) {
	      	    console.log(err);
	      	    alert("Error: Access is denied!");
	      	  }
	      	  else if( err.code == 2) {
	      	    alert("Error: Position is unavailable!");
	      	  }
	      	} /* end errorHandler */

  	    	function setMap(position) {

            /* CALL TO EVENTFULL API*/
            var oArgs = {

               app_key: "4KMXVbWrVkKnh2rv",

               where: "34.06581, -118.36644",

               within: 40,

               units: 'mi',

               date: "2013061000-2015062000",

               page_size: 5,

               sort_order: "distance",

            };

            EVDB.API.call("/events/search", oArgs, function(oData) {

               console.log(oData);


               var i;
               for (i=0; i<oData.events.event.length; i++){
                var latPop = oData.events.event[i].latitude;
                var lngPop = oData.events.event[i].longitude;
                var title = oData.events.event[i].title;
                console.log(title);
                var eventMarker = L.marker([latPop, lngPop]).addTo(map);
                var descripPopUp = L.popup().setContent(title);
                function setMarker(e){
                  descripPopUp
                  .openOn(map);
                }
                eventMarker.on('click', setMarker);

               }

             });


              /* CREATING MAP WITH LEAFLET.JS */
  		      	latitude = position.coords.latitude;
				      longitude = position.coords.longitude;

  		  	  	console.log('latitude: ' + latitude + ' + longitude: ' + longitude);

  		  	  	map = L.map('map').setView([latitude, longitude], 12);

  		  	  	L.tileLayer('http://{s}.tile.cloudmade.com/58b8aaeed6f643f09991358eb6f2e588/1/256/{z}/{x}/{y}.png', {
  		  	  	    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
  		  	  	    maxZoom: 18
  		  	  	}).addTo(map);

              /* set marker for user's current location */
  		  	  	var hereMarker = L.marker([latitude, longitude]).addTo(map);


  		  	  	var herePopUp = L.popup()
  		  	  		.setLatLng([latitude, longitude])
  		  	  		.setContent("You're here")
  		  	  		.openOn(map);


  		  	  	var clickPopUp = L.popup();

  		  	  	function onMapClick(e) {
  		  	  	    clickPopUp
  		  	  	        .setLatLng(e.latlng)
  		  	  	        .setContent("You clicked the map at " + e.latlng.toString())
  		  	  	        .openOn(map);
  		  	  	}

  		  	  	map.on('click', onMapClick);

              var latlng = new L.LatLng(50.5, 30.5);
              console.log(map.getBounds().contains(latlng));


  	      	} /* End showLocation*/


			//console.log('latitude: ' + latitude + ' + longitude: ' + longitude);


		</script>
</body>